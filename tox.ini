[tox]
envlist = py34

[tox:jenkins]
envlist = jenkins34

[testenv]
deps =
    pyvirtualdisplay
    selenium
    coverage
    ; @TODO: export linting output from prospector to Jenkins
    prospector
    arrow
    Django
    requests
    psycopg2
commands =
    ./run_tests.py --unit --functional --acceptance
setenv =
    DJANGO_SETTINGS_MODULE=tests.test_settings
    ; run Selenium locally or through Selenium Grid
    REMOTE_SELENIUM=False
    REMOTE_SELENIUM_URL=http://127.0.0.1:4444/wd/hub

[testenv:noacceptance]
deps     = {[testenv]deps}
commands = ./run_tests.py --unit --functional
setenv   = {[testenv]setenv}

[testenv:jenkins34]
deps     = {[testenv]deps}
commands = {[testenv]commands}
setenv   =
    {[testenv]setenv}
    JENKINS=True
    ; The remote Selenium Node needs to have been started in an X environment (using the DISPLAY environment variable).
    ; If the server is headless, this can be through a 'fake' display created with Xvfb or Xvnc.
    ; see: http://blog.dahanne.net/2011/07/18/run-ui-tests-on-a-headless-jenkins-hudson-continuous-integration-server-running-ubuntu/
    ;      https://wiki.jenkins-ci.org/display/JENKINS/Xvnc+Plugin
    ;      https://github.com/jenkinsci/workflow-plugin/blob/master/basic-steps/CORE-STEPS.md#build-wrappers
    REMOTE_SELENIUM=True
    REMOTE_SELENIUM_URL=http://127.0.0.1:4444/wd/hub
    POSTGRESQL_HOST=127.0.0.1
