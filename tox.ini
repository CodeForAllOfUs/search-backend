[tox]
envlist = py34

[tox:jenkins]
envlist = jenkins34

[testenv]
deps =
    pyvirtualdisplay
    selenium
    coverage
    ; @TODO: export linting output from prospector to Jenkins
    prospector
    arrow
    Django
    requests
    psycopg2
setenv =
    DJANGO_SETTINGS_MODULE=tests.test_settings
    ; run Selenium locally or through Selenium Grid
    REMOTE_SELENIUM=False
    REMOTE_SELENIUM_URL=http://127.0.0.1:4444/wd/hub
    COVERAGE_SOURCES_SRC=codeforallofus_search
    COVERAGE_SOURCES_UNIT_TESTS=tests/tests_unit
    COVERAGE_SOURCES_FUNCTIONAL_TESTS=tests/tests_functional
    COVERAGE_SOURCES_ACCEPTANCE_TESTS=tests/tests_acceptance
commands =
    ;./run_tests.py --unit --functional --acceptance
    ;coverage run --branch --source 'codeforallofus_search,tests/tests_unit,tests/tests_functional,tests/tests_acceptance' ./run_tests.py --unit --functional --acceptance
    coverage run ./run_tests.py --unit --functional --acceptance
    coverage report
    coverage html
    coverage xml

[testenv:noacceptance]
deps     = {[testenv]deps}
setenv   = 
    {[testenv]setenv}
    COVERAGE_SOURCES_ACCEPTANCE_TESTS=
commands = 
    ;./run_tests.py --unit --functional
    ;coverage run --branch --source 'codeforallofus_search,tests/tests_unit,tests/tests_functional' ./run_tests.py --unit --functional
    coverage run ./run_tests.py --unit --functional
    coverage report
    coverage html
    coverage xml

[testenv:jenkins34]
deps     = {[testenv]deps}
setenv   =
    {[testenv]setenv}
    JENKINS=True
    ; The remote Selenium Node needs to have been started in an X environment (using the DISPLAY environment variable).
    ; If the server is headless, this can be through a 'fake' display created with Xvfb or Xvnc.
    ; see: http://blog.dahanne.net/2011/07/18/run-ui-tests-on-a-headless-jenkins-hudson-continuous-integration-server-running-ubuntu/
    ;      https://wiki.jenkins-ci.org/display/JENKINS/Xvnc+Plugin
    ;      https://github.com/jenkinsci/workflow-plugin/blob/master/basic-steps/CORE-STEPS.md#build-wrappers
    REMOTE_SELENIUM=True
    REMOTE_SELENIUM_URL=http://127.0.0.1:4444/wd/hub
    POSTGRESQL_HOST=127.0.0.1
commands = {[testenv]commands}
